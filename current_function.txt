游戏规则：
棋盘表示：

棋盘由24个点（Point）组成，分别编号为0到23。
玩家1的棋子在棋盘的正方向移动（从0到23），玩家2的棋子在棋盘的负方向移动（从23到0）。
棋盘使用一个数组来表示，每个元素的值为正数表示玩家1的棋子，负数表示玩家2的棋子。

棋子初始化：

每个玩家各有15颗棋子。

当前的初始化规则：
玩家1的2颗棋子放在棋盘的起始点 board[0]。
玩家2的2颗棋子放在对角点 board[23]。
实际游戏中，棋子的初始位置应该有更多的棋子分布在不同位置，但目前是简化版。

移动规则：

每回合，玩家通过掷两个骰子决定可以移动的步数。
掷骰子后，玩家可以根据两个骰子点数分别移动棋子两次。
如果骰子的两个点数相同，暂时未实现4次移动的规则。
玩家可以选择要移动的棋子的起始位置，棋子将按骰子的点数进行移动：
玩家1：从小编号到大编号移动。
玩家2：从大编号到小编号移动。
移动的目标点可以是：
目标点没有棋子。
目标点有自己方的棋子。
目标点有1个对方的棋子，且可以“吃掉”对方的棋子（即对方棋子数量为1）。

吃子规则：

如果某个目标点只有1个对方棋子，则可以将该棋子“吃掉”，并将它从棋盘上移除（在实际规则中，应放回起始位置重新入场，暂未实现）。
胜利条件：

每位玩家的目标是将自己的所有棋子移动到家区，并最终全部移出棋盘。

胜利检查规则：当前玩家的所有棋子都移动到自己的“家区”（对于玩家1是18到23点，对于玩家2是0到5点），则获胜。

游戏功能：

棋盘展示：

在控制台中，每回合显示当前棋盘的状态，棋子在每个位置的数量（正数表示玩家1的棋子，负数表示玩家2的棋子）。
掷骰子：

玩家每回合通过按下回车键来掷两个骰子，生成两个随机的1到6之间的点数。
显示骰子的结果，供玩家决定移动棋子的步数。
玩家轮流：

两名玩家轮流进行游戏，系统会提示玩家输入想要移动的棋子的起始位置，按骰子的点数移动棋子。
检查每次移动是否合法，并更新棋盘。
移动棋子：

玩家输入要移动的棋子的起始位置，系统会计算移动后的目标点，并判断是否允许移动。
如果移动成功，棋盘会更新当前棋子的状态。如果目标点有1个对方棋子，可以吃掉对方棋子。
胜利判定：

每回合检查玩家是否获胜。当某一玩家的所有棋子都进入家区并且能够移出棋盘时，该玩家获胜，游戏结束。
当前功能的局限性：
初始棋子位置简单：目前每个玩家只有2个棋子放置在起始位置，未实现完全的Backgammon起始布局。
棋子吃掉后的处理不完整：棋子被吃掉后并未放回到起始位置重新入场。
双骰子相同的处理未实现：在标准Backgammon规则中，当两个骰子点数相同时，玩家可以移动4次，但目前代码中没有实现。
移出棋盘的规则未实现：游戏中尚未实现将棋子移出棋盘的完整逻辑，胜利判定简化为所有棋子进入家区。
可扩展的功能：
完整的棋盘布局：实现标准Backgammon棋盘的初始布局，增加更多棋子的放置位置。
复合规则：处理玩家掷两个相同骰子时的额外移动次数。
完善吃子机制：被吃掉的棋子需要返回起始位置，并在后续回合重新入场。
移出棋盘的机制：实现玩家将所有棋子移出棋盘的规则，胜利条件更符合标准规则。